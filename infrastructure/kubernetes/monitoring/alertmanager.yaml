# Alertmanager Configuration v0.25.0
# Purpose: High-availability alert management system with advanced routing and notifications
# Dependencies: 
# - prom/alertmanager:v0.25.0
# - jimmidyson/configmap-reload:v0.8.0

---
# Alertmanager Configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: kustomize
data:
  alertmanager.yml: |
    global:
      resolve_timeout: 5m
      pagerduty_url: 'https://events.pagerduty.com/v2/enqueue'
      smtp_smarthost: '${SMTP_SERVER}:587'
      smtp_from: 'alertmanager@company.com'
      smtp_auth_username: '${SMTP_USER}'
      smtp_auth_password: '${SMTP_PASSWORD}'
      smtp_require_tls: true

    templates:
      - '/etc/alertmanager/templates/*.tmpl'

    route:
      receiver: 'default'
      group_by: ['alertname', 'cluster', 'service', 'severity', 'instance']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      routes:
        - match:
            severity: critical
          receiver: pagerduty-critical
          group_wait: 0s
          repeat_interval: 30m
          continue: true
        - match:
            severity: warning
          receiver: email-warning
          group_wait: 1m

    inhibit_rules:
      - source_match:
          severity: critical
        target_match:
          severity: warning
        equal: ['alertname', 'cluster', 'service']

    receivers:
      - name: 'default'
        email_configs:
          - to: 'team@company.com'
            send_resolved: true
            html: '{{ template "email.default.html" . }}'
            
      - name: 'pagerduty-critical'
        pagerduty_configs:
          - routing_key: '${PAGERDUTY_KEY}'
            severity: '{{ .CommonLabels.severity }}'
            class: '{{ .CommonLabels.class }}'
            group: '{{ .CommonLabels.team }}'
            description: '{{ .CommonAnnotations.description }}'
            
      - name: 'email-warning'
        email_configs:
          - to: 'alerts@company.com'
            send_resolved: true
            html: '{{ template "email.warning.html" . }}'

---
# Alertmanager StatefulSet for High Availability
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: kustomize
spec:
  serviceName: alertmanager
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: alertmanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: alertmanager
      annotations:
        checksum/config: ${CONFIG_CHECKSUM}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
    spec:
      serviceAccountName: monitoring
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
      terminationGracePeriodSeconds: 60
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.25.0
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/alertmanager/alertmanager.yml"
            - "--storage.path=/alertmanager"
            - "--data.retention=${ALERTMANAGER_RETENTION}"
            - "--cluster.listen-address=$(POD_IP):9094"
            - "--cluster.peer=alertmanager-0.alertmanager:9094"
            - "--cluster.peer=alertmanager-1.alertmanager:9094"
            - "--cluster.peer=alertmanager-2.alertmanager:9094"
            - "--web.listen-address=:9093"
            - "--web.route-prefix=/"
            - "--log.level=info"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - name: http
              containerPort: 9093
            - name: cluster
              containerPort: 9094
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: config
              mountPath: /etc/alertmanager
            - name: storage
              mountPath: /alertmanager

        - name: config-reloader
          image: jimmidyson/configmap-reload:v0.8.0
          imagePullPolicy: IfNotPresent
          args:
            - "--volume-dir=/etc/alertmanager"
            - "--webhook-url=http://localhost:9093/-/reload"
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: config
              mountPath: /etc/alertmanager
              readOnly: true

      volumes:
        - name: config
          configMap:
            name: alertmanager-config

  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
        storageClassName: standard

---
# Alertmanager Service for Load Balancing
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/managed-by: kustomize
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9093"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9093
      targetPort: http
    - name: cluster
      port: 9094
      targetPort: cluster
  selector:
    app.kubernetes.io/name: alertmanager