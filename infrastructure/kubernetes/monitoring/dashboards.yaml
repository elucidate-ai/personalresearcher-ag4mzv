# Grafana Dashboards ConfigMap v9.5.3
# Purpose: Defines comprehensive monitoring dashboards for system metrics, API performance, and business KPIs
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
  labels:
    app: grafana
    component: dashboards
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: monitoring
data:
  # System Metrics Dashboard
  system-metrics.json: |
    {
      "title": "System Metrics Dashboard",
      "uid": "system-metrics",
      "timezone": "browser",
      "refresh": "10s",
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": ["5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h"],
        "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "7d"]
      },
      "panels": [
        {
          "title": "CPU Usage by Pod",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
          "targets": [
            {
              "expr": "sum(rate(container_cpu_usage_seconds_total{namespace=\"monitoring\"}[5m])) by (pod)",
              "legendFormat": "{{pod}}",
              "interval": "30s"
            }
          ],
          "yaxes": [
            {"format": "percentunit", "label": "CPU Usage"},
            {"format": "short"}
          ]
        },
        {
          "title": "Memory Usage by Pod",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
          "targets": [
            {
              "expr": "sum(container_memory_working_set_bytes{namespace=\"monitoring\"}) by (pod)",
              "legendFormat": "{{pod}}",
              "interval": "30s"
            }
          ],
          "yaxes": [
            {"format": "bytes", "label": "Memory"},
            {"format": "short"}
          ]
        },
        {
          "title": "Network I/O",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
          "targets": [
            {
              "expr": "sum(rate(container_network_receive_bytes_total{namespace=\"monitoring\"}[5m])) by (pod)",
              "legendFormat": "{{pod}} - Receive",
              "interval": "30s"
            },
            {
              "expr": "sum(rate(container_network_transmit_bytes_total{namespace=\"monitoring\"}[5m])) by (pod)",
              "legendFormat": "{{pod}} - Transmit",
              "interval": "30s"
            }
          ],
          "yaxes": [
            {"format": "Bps", "label": "Bandwidth"},
            {"format": "short"}
          ]
        }
      ]
    }

  # API Performance Dashboard
  api-metrics.json: |
    {
      "title": "API Performance Dashboard",
      "uid": "api-metrics",
      "timezone": "browser",
      "refresh": "30s",
      "panels": [
        {
          "title": "Request Rate by Service",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
          "targets": [
            {
              "expr": "sum(rate(http_requests_total{namespace=\"monitoring\"}[5m])) by (service)",
              "legendFormat": "{{service}}",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "reqps", "label": "Requests/sec"},
            {"format": "short"}
          ]
        },
        {
          "title": "Error Rate by Service",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
          "targets": [
            {
              "expr": "sum(rate(http_requests_total{status=~\"5..\"}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service)",
              "legendFormat": "{{service}}",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "percentunit", "label": "Error Rate"},
            {"format": "short"}
          ]
        },
        {
          "title": "95th Percentile Response Times",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8},
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service))",
              "legendFormat": "{{service}}",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "s", "label": "Response Time"},
            {"format": "short"}
          ]
        }
      ]
    }

  # Business KPIs Dashboard
  business-metrics.json: |
    {
      "title": "Business KPIs Dashboard",
      "uid": "business-kpis",
      "timezone": "browser",
      "refresh": "1m",
      "panels": [
        {
          "title": "Content Processing Rate",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0},
          "targets": [
            {
              "expr": "sum(rate(content_processed_total{namespace=\"monitoring\"}[5m])) by (type)",
              "legendFormat": "{{type}}",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "ops", "label": "Items/sec"},
            {"format": "short"}
          ]
        },
        {
          "title": "Knowledge Graph Operations",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0},
          "targets": [
            {
              "expr": "sum(rate(graph_operations_total{namespace=\"monitoring\"}[5m])) by (operation)",
              "legendFormat": "{{operation}}",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "ops", "label": "Operations/sec"},
            {"format": "short"}
          ]
        },
        {
          "title": "Vector Search Performance",
          "type": "graph",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8},
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(vector_search_duration_seconds_bucket[5m])) by (le))",
              "legendFormat": "95th percentile",
              "interval": "1m"
            }
          ],
          "yaxes": [
            {"format": "s", "label": "Search Time"},
            {"format": "short"}
          ]
        },
        {
          "title": "Content Quality Distribution",
          "type": "gauge",
          "datasource": "Prometheus",
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8},
          "targets": [
            {
              "expr": "avg(content_quality_score) by (type)",
              "legendFormat": "{{type}}",
              "interval": "1m"
            }
          ],
          "options": {
            "minValue": 0,
            "maxValue": 1,
            "thresholds": [
              {"value": 0, "color": "red"},
              {"value": 0.7, "color": "yellow"},
              {"value": 0.9, "color": "green"}
            ]
          }
        }
      ]
    }