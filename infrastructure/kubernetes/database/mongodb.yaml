# MongoDB StatefulSet Configuration for Knowledge Aggregation System
# Version: 7.0
# Dependencies:
# - k8s.io/api/apps/v1 v1
# - k8s.io/api/core/v1 v1
# - mongodb v7.0

---
# Headless Service for StatefulSet DNS
apiVersion: v1
kind: Service
metadata:
  name: mongodb-headless
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: knowledge-system
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/part-of: database
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: mongodb

---
# Regular Service for MongoDB access
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: knowledge-system
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/part-of: database
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9216"
spec:
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
  selector:
    app.kubernetes.io/name: mongodb

---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: mongodb-pdb
  namespace: knowledge-system
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb

---
# MongoDB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: knowledge-system
    app.kubernetes.io/component: mongodb
    app.kubernetes.io/part-of: database
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9216"
spec:
  serviceName: mongodb-headless
  replicas: 3
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/component: mongodb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9216"
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - mongodb
              topologyKey: kubernetes.io/hostname
      containers:
        - name: mongodb
          image: mongodb:7.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
              protocol: TCP
          resources:
            requests:
              cpu: "2"
              memory: "4Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secrets
                  key: root-password
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
            - name: mongodb-config
              mountPath: /etc/mongod.conf
              subPath: mongod.conf
            - name: backup
              mountPath: /backup
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 60
            periodSeconds: 20
          startupProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            failureThreshold: 30
            periodSeconds: 10
      volumes:
        - name: mongodb-config
          configMap:
            name: app-config
        - name: backup
          persistentVolumeClaim:
            claimName: mongodb-backup
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
        labels:
          app.kubernetes.io/name: mongodb
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3
        resources:
          requests:
            storage: 100Gi