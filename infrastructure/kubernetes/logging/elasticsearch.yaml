# Elasticsearch Kubernetes Configuration
# Version: v1
# Dependencies:
# - k8s.io/api/apps/v1 v1
# - k8s.io/api/core/v1 v1
# - elasticsearch:8.9.0

---
# ConfigMap for Elasticsearch configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: knowledge-system
data:
  elasticsearch.yml: |
    cluster.name: knowledge-logging
    node.name: ${HOSTNAME}
    network.host: 0.0.0.0
    discovery.seed_hosts: ["elasticsearch-0.elasticsearch", "elasticsearch-1.elasticsearch", "elasticsearch-2.elasticsearch"]
    cluster.initial_master_nodes: ["elasticsearch-0", "elasticsearch-1", "elasticsearch-2"]
    xpack.security.enabled: true
    xpack.monitoring.collection.enabled: true
    xpack.monitoring.exporters:
      prometheus:
        enabled: true
        host: ["localhost"]
        port: 9200
    path.data: /usr/share/elasticsearch/data
    path.logs: /usr/share/elasticsearch/logs
    bootstrap.memory_lock: true
  jvm.options: |
    -Xms${ELASTICSEARCH_JVM_HEAP}
    -Xmx${ELASTICSEARCH_JVM_HEAP}
    -XX:+UseG1GC
    -XX:G1ReservePercent=25
    -XX:InitiatingHeapOccupancyPercent=30
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/usr/share/elasticsearch/data/heap-dump.hprof

---
# Service for Elasticsearch cluster
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9200"
    prometheus.io/path: "/_prometheus/metrics"
spec:
  selector:
    app.kubernetes.io/name: elasticsearch
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: transport
      port: 9300
      targetPort: 9300
      protocol: TCP
  type: ClusterIP

---
# StatefulSet for Elasticsearch cluster
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  serviceName: elasticsearch
  replicas: 3
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9200"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
        - name: sysctl
          image: busybox:1.36
          command: ['sysctl', '-w', 'vm.max_map_count=262144']
          securityContext:
            privileged: true
        - name: fix-permissions
          image: busybox:1.36
          command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms2g -Xmx2g"
            - name: ELASTICSEARCH_JVM_HEAP
              value: "2g"
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          resources:
            limits:
              cpu: "2"
              memory: 4Gi
            requests:
              cpu: "500m"
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
            - name: elasticsearch-config
              mountPath: /usr/share/elasticsearch/config
              readOnly: true
            - name: elasticsearch-certs
              mountPath: /usr/share/elasticsearch/config/certs
              readOnly: true
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch-config
        - name: elasticsearch-certs
          secret:
            secretName: elasticsearch-certs
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - elasticsearch
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        labels:
          app.kubernetes.io/name: elasticsearch
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: gp3-storage-class
        resources:
          requests:
            storage: 50Gi