# Kubernetes manifest for Fluentd DaemonSet v1.16.1
# Purpose: Secure and optimized log collection with Elasticsearch forwarding
# Dependencies: k8s.io/api/apps/v1, k8s.io/api/core/v1

---
# ServiceAccount with minimal required permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-sa
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: knowledge-aggregation
    security.kubernetes.io/enforced: "true"
  annotations:
    kubernetes.io/enforce-mountable-secrets: "true"
    security.kubernetes.io/pod-security-policy: restricted

---
# ConfigMap containing Fluentd configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: knowledge-system
  labels:
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
data:
  fluent.conf: |
    # Input plugins
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # Filter plugins
    <filter kubernetes.**>
      @type kubernetes_metadata
      kubernetes_url "#{ENV['KUBERNETES_URL']}"
      bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
      ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      skip_labels false
      skip_container_metadata false
    </filter>

    # Buffer configuration
    <buffer>
      @type file
      path /var/log/fluentd-buffers/kubernetes.buffer
      flush_mode interval
      retry_type exponential_backoff
      flush_interval ${FLUENTD_FLUSH_INTERVAL}
      flush_thread_count 4
      retry_forever false
      retry_max_interval 30
      chunk_limit_size 8M
      queue_limit_length 32
      overflow_action block
      total_limit_size ${FLUENTD_BUFFER_SIZE}
    </buffer>

    # Output configuration
    <match kubernetes.**>
      @type elasticsearch
      host "#{ENV['ELASTICSEARCH_HOST']}"
      port "#{ENV['ELASTICSEARCH_PORT']}"
      scheme https
      ssl_verify true
      ssl_version TLSv1_2
      user "#{ENV['ELASTICSEARCH_USER']}"
      password "#{ENV['ELASTICSEARCH_PASSWORD']}"
      index_name fluentd.${tag}.%Y%m%d
      type_name _doc
      include_timestamp true
      reconnect_on_error true
      reload_connections false
      reload_on_failure true
      request_timeout 30s
    </match>

---
# DaemonSet specification
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: knowledge-system
  labels:
    app: fluentd
    app.kubernetes.io/name: fluentd
    app.kubernetes.io/component: logging
    app.kubernetes.io/version: v1.16.1
spec:
  selector:
    matchLabels:
      app: fluentd
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: fluentd
      annotations:
        security.kubernetes.io/pod-security-standards: restricted
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
    spec:
      serviceAccountName: fluentd-sa
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
      containers:
      - name: fluentd
        image: fluent/fluentd-kubernetes-daemonset:${FLUENTD_VERSION}
        imagePullPolicy: IfNotPresent
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: host
        - name: FLUENT_ELASTICSEARCH_PORT
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: port
        - name: KUBERNETES_URL
          value: https://kubernetes.default.svc
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        resources:
          limits:
            cpu: ${FLUENTD_CPU_LIMIT}
            memory: ${FLUENTD_MEMORY_LIMIT}
          requests:
            cpu: 100m
            memory: 200Mi
        ports:
        - name: forward
          containerPort: 24224
          protocol: TCP
        - name: metrics
          containerPort: 24231
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc/fluent.conf
          subPath: fluent.conf
        - name: buffer
          mountPath: /var/log/fluentd-buffers
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - kill -SIGTERM 1 && sleep 10
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config
      - name: buffer
        emptyDir: {}
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: fluentd
              topologyKey: kubernetes.io/hostname