# Grafana Tempo Configuration v2.1.1
# Purpose: Distributed tracing backend with high availability and security
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: tracing
    app.kubernetes.io/managed-by: kustomize
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200
      grpc_listen_port: 9095
      log_level: info
      http_tls_config:
        cert_file: /etc/tempo/certs/tls.crt
        key_file: /etc/tempo/certs/tls.key

    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
              tls_enabled: true
            http:
              endpoint: 0.0.0.0:4318
              tls_enabled: true

    ingester:
      max_block_duration: 5m
      trace_idle_period: 30s
      flush_check_period: 1m
      max_block_bytes: 1073741824  # 1GiB

    compactor:
      compaction:
        block_retention: 24h
        compaction_window: 1h
        max_compaction_objects: 1000000
        compacted_block_retention: 1h

    storage:
      trace:
        backend: local
        local:
          path: /var/tempo/traces
        wal:
          path: /var/tempo/wal
          encoding: snappy

    overrides:
      max_traces_per_user: 100000
      ingestion_rate_limit: 100000
      ingestion_burst_size: 150000

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: tracing
    app.kubernetes.io/managed-by: kustomize
spec:
  serviceName: tempo
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tempo
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3200"
    spec:
      serviceAccountName: monitoring
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      containers:
        - name: tempo
          image: grafana/tempo:2.1.1
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/tempo/tempo.yaml
          ports:
            - name: http
              containerPort: 3200
            - name: grpc
              containerPort: 9095
            - name: otlp-grpc
              containerPort: 4317
            - name: otlp-http
              containerPort: 4318
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2
              memory: 4Gi
          volumeMounts:
            - name: config
              mountPath: /etc/tempo
            - name: storage
              mountPath: /var/tempo
            - name: certs
              mountPath: /etc/tempo/certs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 15
      volumes:
        - name: config
          configMap:
            name: tempo-config
        - name: certs
          secret:
            secretName: tempo-certs
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
        storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: tempo
  namespace: monitoring
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/part-of: knowledge-aggregation-system
    app.kubernetes.io/component: tracing
    app.kubernetes.io/managed-by: kustomize
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3200
      targetPort: http
    - name: grpc
      port: 9095
      targetPort: grpc
    - name: otlp-grpc
      port: 4317
      targetPort: otlp-grpc
    - name: otlp-http
      port: 4318
      targetPort: otlp-http
  selector:
    app.kubernetes.io/name: tempo