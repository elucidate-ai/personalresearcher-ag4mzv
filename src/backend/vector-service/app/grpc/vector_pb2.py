# Generated by the Protocol Buffer compiler. DO NOT EDIT!
# source: vector.proto

# External imports - versions specified in comments
import sys  # System utilities
from google.protobuf import timestamp_pb2 as _timestamp_pb2  # v3.0.0
from google.protobuf import descriptor as _descriptor  # v3.0.0
from google.protobuf.internal import builder as _builder

# Create the symbol database
_sym_db = _descriptor.SymbolDatabase()

# File level DESCRIPTOR
DESCRIPTOR = _descriptor.FileDescriptor(
    name='vector.proto',
    package='vector',
    syntax='proto3',
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
    serialized_pb=b'\n\x0cvector.proto'
)

# Message Descriptors
_EMBEDDINGREQUEST = _descriptor.Descriptor(
    name='EmbeddingRequest',
    full_name='vector.EmbeddingRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='content_id', full_name='vector.EmbeddingRequest.content_id',
            index=0, number=1, type=9, cpp_type=9, label=1,
            default_value=b"".decode('utf-8')),
        _descriptor.FieldDescriptor(
            name='content_type', full_name='vector.EmbeddingRequest.content_type',
            index=1, number=2, type=9, cpp_type=9, label=1,
            default_value=b"".decode('utf-8')),
        _descriptor.FieldDescriptor(
            name='content_data', full_name='vector.EmbeddingRequest.content_data',
            index=2, number=3, type=12, cpp_type=9, label=1,
            default_value=b""),
        _descriptor.FieldDescriptor(
            name='metadata', full_name='vector.EmbeddingRequest.metadata',
            index=3, number=4, type=11, cpp_type=10, label=1,
            message_type=None)
    ]
)

_EMBEDDINGRESPONSE = _descriptor.Descriptor(
    name='EmbeddingResponse',
    full_name='vector.EmbeddingResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='embedding_id', full_name='vector.EmbeddingResponse.embedding_id',
            index=0, number=1, type=9, cpp_type=9, label=1,
            default_value=b"".decode('utf-8')),
        _descriptor.FieldDescriptor(
            name='vector', full_name='vector.EmbeddingResponse.vector',
            index=1, number=2, type=2, cpp_type=6, label=3),
        _descriptor.FieldDescriptor(
            name='dimensions', full_name='vector.EmbeddingResponse.dimensions',
            index=2, number=3, type=13, cpp_type=3, label=1,
            default_value=0),
        _descriptor.FieldDescriptor(
            name='created_at', full_name='vector.EmbeddingResponse.created_at',
            index=3, number=4, type=11, cpp_type=10, label=1,
            message_type=None)
    ]
)

_SEARCHREQUEST = _descriptor.Descriptor(
    name='SearchRequest',
    full_name='vector.SearchRequest',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='query_vector', full_name='vector.SearchRequest.query_vector',
            index=0, number=1, type=2, cpp_type=6, label=3),
        _descriptor.FieldDescriptor(
            name='top_k', full_name='vector.SearchRequest.top_k',
            index=1, number=2, type=13, cpp_type=3, label=1,
            default_value=10),
        _descriptor.FieldDescriptor(
            name='similarity_threshold', full_name='vector.SearchRequest.similarity_threshold',
            index=2, number=3, type=2, cpp_type=6, label=1,
            default_value=float(0.5)),
        _descriptor.FieldDescriptor(
            name='filters', full_name='vector.SearchRequest.filters',
            index=3, number=4, type=11, cpp_type=10, label=1,
            message_type=None)
    ]
)

_SEARCHRESPONSE = _descriptor.Descriptor(
    name='SearchResponse',
    full_name='vector.SearchResponse',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='results', full_name='vector.SearchResponse.results',
            index=0, number=1, type=11, cpp_type=10, label=3,
            message_type=None),
        _descriptor.FieldDescriptor(
            name='total_found', full_name='vector.SearchResponse.total_found',
            index=1, number=2, type=13, cpp_type=3, label=1,
            default_value=0)
    ]
)

_SIMILARVECTOR = _descriptor.Descriptor(
    name='SimilarVector',
    full_name='vector.SimilarVector',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    create_key=_descriptor._internal_create_key,
    fields=[
        _descriptor.FieldDescriptor(
            name='vector_id', full_name='vector.SimilarVector.vector_id',
            index=0, number=1, type=9, cpp_type=9, label=1,
            default_value=b"".decode('utf-8')),
        _descriptor.FieldDescriptor(
            name='vector', full_name='vector.SimilarVector.vector',
            index=1, number=2, type=2, cpp_type=6, label=3),
        _descriptor.FieldDescriptor(
            name='similarity_score', full_name='vector.SimilarVector.similarity_score',
            index=2, number=3, type=2, cpp_type=6, label=1,
            default_value=float(0)),
        _descriptor.FieldDescriptor(
            name='metadata', full_name='vector.SimilarVector.metadata',
            index=3, number=4, type=11, cpp_type=10, label=1,
            message_type=None)
    ]
)

# Message Classes
class EmbeddingRequest(_message.Message):
    """Protocol buffer message for embedding generation requests"""
    __slots__ = ['content_id', 'content_type', 'content_data', 'metadata']
    
    def __init__(self, **kwargs):
        super(EmbeddingRequest, self).__init__(**kwargs)

class EmbeddingResponse(_message.Message):
    """Protocol buffer message for embedding generation responses"""
    __slots__ = ['embedding_id', 'vector', 'dimensions', 'created_at']
    
    def __init__(self, **kwargs):
        super(EmbeddingResponse, self).__init__(**kwargs)

class SearchRequest(_message.Message):
    """Protocol buffer message for similarity search requests"""
    __slots__ = ['query_vector', 'top_k', 'similarity_threshold', 'filters']
    
    def __init__(self, **kwargs):
        super(SearchRequest, self).__init__(**kwargs)

class SearchResponse(_message.Message):
    """Protocol buffer message for similarity search responses"""
    __slots__ = ['results', 'total_found']
    
    def __init__(self, **kwargs):
        super(SearchResponse, self).__init__(**kwargs)

class SimilarVector(_message.Message):
    """Protocol buffer message for similar vector results"""
    __slots__ = ['vector_id', 'vector', 'similarity_score', 'metadata']
    
    def __init__(self, **kwargs):
        super(SimilarVector, self).__init__(**kwargs)

# Register message classes
_sym_db.RegisterFileDescriptor(DESCRIPTOR)
_sym_db.RegisterMessage(EmbeddingRequest)
_sym_db.RegisterMessage(EmbeddingResponse)
_sym_db.RegisterMessage(SearchRequest)
_sym_db.RegisterMessage(SearchResponse)
_sym_db.RegisterMessage(SimilarVector)

# Initialize global variables
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'vector_pb2', globals())

if _descriptor._USE_C_DESCRIPTORS == False:
    DESCRIPTOR._options = None
    _EMBEDDINGREQUEST._serialized_start=17
    _EMBEDDINGREQUEST._serialized_end=121
    _EMBEDDINGRESPONSE._serialized_start=123
    _EMBEDDINGRESPONSE._serialized_end=251
    _SEARCHREQUEST._serialized_start=253
    _SEARCHREQUEST._serialized_end=371
    _SEARCHRESPONSE._serialized_start=373
    _SEARCHRESPONSE._serialized_end=458
    _SIMILARVECTOR._serialized_start=460
    _SIMILARVECTOR._serialized_end=571