# nginx version: 1.24.0 (or higher recommended)

# Define user and worker processes
user nginx nginx;
worker_processes auto;

# File descriptor limits
worker_rlimit_nofile 20000;

# Events configuration
events {
    worker_connections 2048;
    multi_accept on;
    use epoll;
}

# HTTP configuration block
http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Client configuration
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # TCP optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Security: disable nginx version display
    server_tokens off;

    # Compression settings
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_types 
        text/plain 
        text/css 
        application/json 
        application/javascript 
        text/xml 
        application/xml 
        application/xml+rss 
        text/javascript 
        application/vnd.ms-fontobject 
        application/x-font-ttf 
        font/opentype 
        image/svg+xml 
        image/x-icon;

    # Main server configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name localhost;
        
        # Document root configuration
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.knowledge-curator.com; object-src 'none'; frame-ancestors 'none'" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Root location - React application
        location / {
            try_files $uri $uri/ /index.html;
            expires 1h;
            add_header Cache-Control "public, no-cache, must-revalidate, proxy-revalidate";
            add_header X-Cache-Status $upstream_cache_status;
        }

        # Static assets location
        location ~ ^/assets/ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            access_log off;
            log_not_found off;
        }

        # JavaScript and CSS files
        location ~ \.(?:css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            access_log off;
        }

        # Image files
        location ~ \.(?:jpg|jpeg|gif|png|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            access_log off;
            try_files $uri =404;
        }

        # Font files
        location ~ \.(?:woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable, max-age=31536000";
            access_log off;
            add_header Access-Control-Allow-Origin *;
        }

        # API proxy configuration
        location /api/ {
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate";
            
            # Proxy settings
            proxy_pass http://api-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }
}